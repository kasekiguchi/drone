function dx = rotation_matrix_thrust_force_physical_parameter_model(in1,in2,in3)
%ROTATION_MATRIX_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL
%    DX = ROTATION_MATRIX_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    18-Oct-2019 09:52:31

dp1 = in1(13,:);
dp2 = in1(14,:);
dp3 = in1(15,:);
gravity = in3(:,6);
jx = in3(:,3);
jy = in3(:,4);
jz = in3(:,5);
km1 = in3(:,7);
km2 = in3(:,8);
km3 = in3(:,9);
km4 = in3(:,10);
l = in3(:,2);
m = in3(:,1);
o1 = in1(16,:);
o2 = in1(17,:);
o3 = in1(18,:);
r11 = in1(1,:);
r12 = in1(2,:);
r13 = in1(3,:);
r21 = in1(4,:);
r22 = in1(5,:);
r23 = in1(6,:);
r31 = in1(7,:);
r32 = in1(8,:);
r33 = in1(9,:);
u1 = in2(1,:);
u2 = in2(2,:);
u3 = in2(3,:);
u4 = in2(4,:);
t2 = 1.0./jx;
t3 = 1.0./jy;
t4 = 1.0./jz;
t5 = 1.0./m;
t6 = sqrt(2.0);
dx = [-o2.*r13+o3.*r12;o1.*r13-o3.*r11;-o1.*r12+o2.*r11;-o2.*r23+o3.*r22;o1.*r23-o3.*r21;-o1.*r22+o2.*r21;-o2.*r33+o3.*r32;o1.*r33-o3.*r31;-o1.*r32+o2.*r31;dp1;dp2;dp3;r13.*t5.*u1+r13.*t5.*u2+r13.*t5.*u3+r13.*t5.*u4;r23.*t5.*u1+r23.*t5.*u2+r23.*t5.*u3+r23.*t5.*u4;-gravity+r33.*t5.*u1+r33.*t5.*u2+r33.*t5.*u3+r33.*t5.*u4;t2.*(jy.*o2.*o3-jz.*o2.*o3)+(l.*t2.*t6.*u1)./2.0+(l.*t2.*t6.*u2)./2.0-(l.*t2.*t6.*u3)./2.0-(l.*t2.*t6.*u4)./2.0;-t3.*(jx.*o1.*o3-jz.*o1.*o3)-(l.*t3.*t6.*u1)./2.0+(l.*t3.*t6.*u2)./2.0+(l.*t3.*t6.*u3)./2.0-(l.*t3.*t6.*u4)./2.0;t4.*(jx.*o1.*o2-jy.*o1.*o2)-km1.*t4.*u1+km2.*t4.*u2-km3.*t4.*u3+km4.*t4.*u4];
