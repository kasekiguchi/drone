function dx = euler_parameter_thrust_force_physical_parameter_model(in1,in2,in3)
%EULER_PARAMETER_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL
%    DX = EULER_PARAMETER_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    13-Mar-2020 15:41:00

dp1 = in1(8,:);
dp2 = in1(9,:);
dp3 = in1(10,:);
gravity = in3(:,6);
jx = in3(:,3);
jy = in3(:,4);
jz = in3(:,5);
km1 = in3(:,7);
km2 = in3(:,8);
km3 = in3(:,9);
km4 = in3(:,10);
l = in3(:,2);
m = in3(:,1);
o1 = in1(11,:);
o2 = in1(12,:);
o3 = in1(13,:);
q0 = in1(1,:);
q1 = in1(2,:);
q2 = in1(3,:);
q3 = in1(4,:);
u1 = in2(1,:);
u2 = in2(2,:);
u3 = in2(3,:);
u4 = in2(4,:);
t2 = q0.^2;
t3 = q1.^2;
t4 = q2.^2;
t5 = q3.^2;
t6 = q0.*q1.*2.0;
t7 = q0.*q2.*2.0;
t8 = q1.*q3.*2.0;
t9 = q2.*q3.*2.0;
t10 = 1.0./jx;
t11 = 1.0./jy;
t12 = 1.0./jz;
t13 = 1.0./m;
t15 = sqrt(2.0);
t14 = -t9;
t16 = -t3;
t17 = -t4;
t18 = t7+t8;
t19 = t6+t14;
t20 = t2+t5+t16+t17;
dx = [o1.*q1.*(-1.0./2.0)-(o2.*q2)./2.0-(o3.*q3)./2.0;(o1.*q0)./2.0-(o2.*q3)./2.0+(o3.*q2)./2.0;(o2.*q0)./2.0+(o1.*q3)./2.0-(o3.*q1)./2.0;o1.*q2.*(-1.0./2.0)+(o2.*q1)./2.0+(o3.*q0)./2.0;dp1;dp2;dp3;t13.*t18.*u1+t13.*t18.*u2+t13.*t18.*u3+t13.*t18.*u4;-t13.*t19.*u1-t13.*t19.*u2-t13.*t19.*u3-t13.*t19.*u4;-gravity+t13.*t20.*u1+t13.*t20.*u2+t13.*t20.*u3+t13.*t20.*u4;t10.*(jy.*o2.*o3-jz.*o2.*o3)-(l.*t10.*t15.*u1)./2.0-(l.*t10.*t15.*u2)./2.0+(l.*t10.*t15.*u3)./2.0+(l.*t10.*t15.*u4)./2.0;-t11.*(jx.*o1.*o3-jz.*o1.*o3)+(l.*t11.*t15.*u1)./2.0-(l.*t11.*t15.*u2)./2.0+(l.*t11.*t15.*u3)./2.0-(l.*t11.*t15.*u4)./2.0;t12.*(jx.*o1.*o2-jy.*o1.*o2)+km1.*t12.*u1-km2.*t12.*u2-km3.*t12.*u3+km4.*t12.*u4];
