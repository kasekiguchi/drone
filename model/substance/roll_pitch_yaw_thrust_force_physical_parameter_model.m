function dx = roll_pitch_yaw_thrust_force_physical_parameter_model(in1,in2,in3)
%ROLL_PITCH_YAW_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL
%    DX = ROLL_PITCH_YAW_THRUST_FORCE_PHYSICAL_PARAMETER_MODEL(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    20-Mar-2020 07:26:44

dp1 = in1(7,:);
dp2 = in1(8,:);
dp3 = in1(9,:);
gravity = in3(:,6);
jx = in3(:,3);
jy = in3(:,4);
jz = in3(:,5);
km1 = in3(:,7);
km2 = in3(:,8);
km3 = in3(:,9);
km4 = in3(:,10);
l = in3(:,2);
m = in3(:,1);
o1 = in1(10,:);
o2 = in1(11,:);
o3 = in1(12,:);
pitch = in1(5,:);
roll = in1(4,:);
u1 = in2(1,:);
u2 = in2(2,:);
u3 = in2(3,:);
u4 = in2(4,:);
yaw = in1(6,:);
t2 = cos(pitch);
t3 = cos(roll);
t4 = cos(yaw);
t5 = sin(pitch);
t6 = sin(roll);
t7 = sin(yaw);
t8 = 1.0./jx;
t9 = 1.0./jy;
t10 = 1.0./jz;
t11 = 1.0./m;
t15 = sqrt(2.0);
t12 = t4.*t6;
t13 = t6.*t7;
t14 = 1.0./t2;
t16 = t3.*t5.*t7;
t17 = t3.*t4.*t5;
t18 = -t16;
t19 = t13+t17;
t20 = t12+t18;
dx = [dp1;dp2;dp3;t14.*(o1.*t2+o3.*t3.*t5+o2.*t5.*t6);o2.*t3-o3.*t6;t14.*(o3.*t3+o2.*t6);t11.*t19.*u1+t11.*t19.*u2+t11.*t19.*u3+t11.*t19.*u4;-t11.*t20.*u1-t11.*t20.*u2-t11.*t20.*u3-t11.*t20.*u4;-gravity+t2.*t3.*t11.*u1+t2.*t3.*t11.*u2+t2.*t3.*t11.*u3+t2.*t3.*t11.*u4;t8.*(jy.*o2.*o3-jz.*o2.*o3)-(l.*t8.*t15.*u1)./2.0-(l.*t8.*t15.*u2)./2.0+(l.*t8.*t15.*u3)./2.0+(l.*t8.*t15.*u4)./2.0;-t9.*(jx.*o1.*o3-jz.*o1.*o3)+(l.*t9.*t15.*u1)./2.0-(l.*t9.*t15.*u2)./2.0+(l.*t9.*t15.*u3)./2.0-(l.*t9.*t15.*u4)./2.0;t10.*(jx.*o1.*o2-jy.*o1.*o2)+km1.*t10.*u1-km2.*t10.*u2-km3.*t10.*u3+km4.*t10.*u4];
